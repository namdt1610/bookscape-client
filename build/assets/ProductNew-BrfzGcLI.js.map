{"version":3,"file":"ProductNew-BrfzGcLI.js","sources":["../../src/admin/pages/products/ProductNew.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Form, Input, Button, message, Upload, Card } from 'antd/lib'\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport useProductActions from '../../../hooks/product/useProductActions'\r\n\r\nconst ProductNew: React.FC = () => {\r\n    const [form] = Form.useForm()\r\n    const navigate = useNavigate()\r\n    const { createProduct } = useProductActions()\r\n    const [fileList, setFileList] = useState<any[]>([])\r\n\r\n    const handleFinish = async (values: any) => {\r\n        const formData = new FormData()\r\n        for (const key in values) {\r\n            formData.append(key, values[key])\r\n        }\r\n        fileList.forEach((file) => {\r\n            formData.append('images', file.originFileObj)\r\n        })\r\n\r\n        try {\r\n            await createProduct(formData)\r\n            message.success('Product created successfully')\r\n            navigate('/admin/products/new')\r\n        } catch (error) {\r\n            message.error('Error occurred while creating product')\r\n        }\r\n    }\r\n\r\n    // Upload images\r\n    const handleUploadChange = ({ fileList }: any) => {\r\n        setFileList(fileList)\r\n    }\r\n\r\n    return (\r\n        <Card className=\"card-border my-4\">\r\n            <Form form={form} layout=\"vertical\" onFinish={handleFinish}>\r\n                <Form.Item\r\n                    name=\"name\"\r\n                    label=\"Product Name\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please enter the product name',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"price\"\r\n                    label=\"Price\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please enter the product price',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input type=\"number\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"description\"\r\n                    label=\"Description\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please enter the product description',\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"images\"\r\n                    label=\"Product Images\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={handleUploadChange}\r\n                >\r\n                    <Upload\r\n                        listType=\"picture\"\r\n                        beforeUpload={() => false}\r\n                        onChange={handleUploadChange}\r\n                    >\r\n                        <Button icon={<UploadOutlined />}>Upload</Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Create Product\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProductNew\r\n"],"names":["ProductNew","form","Form","navigate","useNavigate","createProduct","useProductActions","fileList","setFileList","useState","handleFinish","values","formData","key","file","message","handleUploadChange","jsx","Card","jsxs","Input","Upload","Button","UploadOutlined"],"mappings":"2HAMA,MAAMA,EAAuB,IAAM,CAC/B,KAAM,CAACC,CAAI,EAAIC,EAAA,KAAK,QAAQ,EACtBC,EAAWC,IACX,CAAE,cAAAC,GAAkBC,IACpB,CAACC,EAAUC,CAAW,EAAIC,EAAA,SAAgB,CAAE,CAAA,EAE5CC,EAAe,MAAOC,GAAgB,CAClC,MAAAC,EAAW,IAAI,SACrB,UAAWC,KAAOF,EACdC,EAAS,OAAOC,EAAKF,EAAOE,CAAG,CAAC,EAE3BN,EAAA,QAASO,GAAS,CACdF,EAAA,OAAO,SAAUE,EAAK,aAAa,CAAA,CAC/C,EAEG,GAAA,CACA,MAAMT,EAAcO,CAAQ,EAC5BG,UAAQ,QAAQ,8BAA8B,EAC9CZ,EAAS,qBAAqB,OAClB,CACZY,UAAQ,MAAM,uCAAuC,CACzD,CAAA,EAIEC,EAAqB,CAAC,CAAE,SAAAT,KAAoB,CAC9CC,EAAYD,CAAQ,CAAA,EAIpB,OAAAU,EAAAA,IAACC,EAAAA,KAAK,CAAA,UAAU,mBACZ,SAAAC,EAAA,KAACjB,QAAK,KAAAD,EAAY,OAAO,WAAW,SAAUS,EAC1C,SAAA,CAAAO,EAAA,IAACf,EAAAA,KAAK,KAAL,CACG,KAAK,OACL,MAAM,eACN,MAAO,CACH,CACI,SAAU,GACV,QAAS,+BACb,CACJ,EAEA,eAACkB,EAAM,MAAA,EAAA,CAAA,CACX,EACAH,EAAA,IAACf,EAAAA,KAAK,KAAL,CACG,KAAK,QACL,MAAM,QACN,MAAO,CACH,CACI,SAAU,GACV,QAAS,gCACb,CACJ,EAEA,SAAAe,EAAAA,IAACG,EAAAA,MAAM,CAAA,KAAK,QAAS,CAAA,CAAA,CACzB,EACAH,EAAA,IAACf,EAAAA,KAAK,KAAL,CACG,KAAK,cACL,MAAM,cACN,MAAO,CACH,CACI,SAAU,GACV,QAAS,sCACb,CACJ,EAEA,SAAAe,EAAA,IAACG,QAAM,SAAN,CAAA,CAAe,CAAA,CACpB,EACAH,EAAA,IAACf,EAAAA,KAAK,KAAL,CACG,KAAK,SACL,MAAM,iBACN,cAAc,WACd,kBAAmBc,EAEnB,SAAAC,EAAA,IAACI,EAAA,OAAA,CACG,SAAS,UACT,aAAc,IAAM,GACpB,SAAUL,EAEV,eAACM,SAAO,CAAA,KAAOL,EAAAA,IAAAM,EAAA,EAAe,EAAI,SAAM,SAAA,CAAA,CAC5C,CAAA,CACJ,EACAN,EAAA,IAACf,EAAK,KAAA,KAAL,CACG,SAAAe,EAAAA,IAACK,EAAAA,OAAO,CAAA,KAAK,UAAU,SAAS,SAAS,SAAA,gBAAA,CAEzC,CACJ,CAAA,CAAA,CACJ,CAAA,CACJ,CAAA,CAER"}