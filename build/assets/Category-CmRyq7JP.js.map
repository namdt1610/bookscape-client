{"version":3,"file":"Category-CmRyq7JP.js","sources":["../../src/admin/pages/categories/Category.tsx"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { Button, Space, Input, Table, Modal, Card } from 'antd/lib'\r\nimport { ColumnsType } from 'antd/lib/table'\r\nimport { ReloadOutlined, PlusOutlined, ImportOutlined } from '@ant-design/icons'\r\nimport { debounce } from 'lodash'\r\nimport { Category } from '../../../interfaces/Category'\r\nimport useCategoryActions from '../../../hooks/Auth/useCategoryActions'\r\n\r\nexport default function Categories() {\r\n    const { fetchCategories } = useCategoryActions()\r\n    const navigate = useNavigate()\r\n    const [categories, setCategories] = useState<Category[]>([])\r\n    const [filteredData, setFilteredData] = useState<Category[]>([])\r\n\r\n    const getCategories = async () => {\r\n        const response = await fetchCategories()\r\n        setCategories(\r\n            response.map((category: Category) => ({\r\n                ...category,\r\n                key: category._id,\r\n            }))\r\n        )\r\n        setFilteredData(response)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCategories()\r\n    }, [])\r\n\r\n    const handleView = (id: string) => {\r\n        navigate(`/admin/categories/${id}`)\r\n    }\r\n\r\n    const handleDelete = (categoryId: string) => {\r\n        Modal.confirm({\r\n            title: 'Are you sure?',\r\n            content: 'Do you really want to delete this category?',\r\n            okText: 'Yes',\r\n            cancelText: 'No',\r\n            onOk: () => {\r\n                console.log('Delete category ID:', categoryId)\r\n            },\r\n        })\r\n    }\r\n\r\n    const onSearch = useMemo(\r\n        () =>\r\n            debounce((value: string) => {\r\n                const lowercasedValue = value.toLowerCase()\r\n                if (value === '') {\r\n                    setFilteredData(categories)\r\n                } else {\r\n                    const filtered = categories.filter((category) =>\r\n                        category.name?.toLowerCase().includes(lowercasedValue)\r\n                    )\r\n                    setFilteredData(filtered)\r\n                }\r\n            }, 300),\r\n        [categories]\r\n    )\r\n\r\n    const { Search } = Input\r\n\r\n    const renderActions = useCallback(\r\n        (_: unknown, record: Category): JSX.Element => (\r\n            <Space size={'middle'} wrap>\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    className=\"btn-border btn-hover\"\r\n                    onClick={() => handleView(record._id)}\r\n                >\r\n                    View\r\n                </Button>\r\n                <Button\r\n                    color=\"danger\"\r\n                    variant=\"outlined\"\r\n                    className=\"btn-border btn-hover\"\r\n                    onClick={() => handleDelete(record._id)}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </Space>\r\n        ),\r\n        []\r\n    )\r\n\r\n    const columns: ColumnsType<Category> = useMemo(\r\n        () => [\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                sorter: (a, b) => (a.name ?? '').localeCompare(b.name ?? ''),\r\n                render: (_, { name, _id }) => (\r\n                    <Link to={`/admin/categories/${_id}`}>{name}</Link>\r\n                ),\r\n            },\r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                render: renderActions,\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"my-6 card-border\">\r\n                <Space size={'middle'} wrap>\r\n                    <Link to={'/admin/categories/new'}>\r\n                        <Button\r\n                            size=\"large\"\r\n                            className=\"btn-border btn-hover\"\r\n                            icon={<PlusOutlined />}\r\n                        >\r\n                            New\r\n                        </Button>\r\n                    </Link>\r\n                    <Button\r\n                        size=\"large\"\r\n                        className=\"btn-border btn-hover\"\r\n                        icon={<ImportOutlined />}\r\n                    >\r\n                        Import\r\n                    </Button>\r\n                    <Button\r\n                        size=\"large\"\r\n                        className=\"btn-border btn-hover\"\r\n                        onClick={() => getCategories()}\r\n                        icon={<ReloadOutlined />}\r\n                    >\r\n                        Refresh\r\n                    </Button>\r\n                    <Search\r\n                        size=\"large\"\r\n                        placeholder=\"input search text\"\r\n                        allowClear\r\n                        onSearch={onSearch}\r\n                        style={{ width: 'auto' }}\r\n                    />\r\n                </Space>\r\n            </Card>\r\n            <Card\r\n                className=\"card-border\"\r\n                title={'Category Management'}\r\n                color=\"#f3f3f3\"\r\n            >\r\n                <Table\r\n                    size=\"large\"\r\n                    tableLayout=\"fixed\"\r\n                    rowClassName={'cursor-pointer'}\r\n                    className=\"border-black border rounded-lg\"\r\n                    dataSource={filteredData}\r\n                    columns={columns}\r\n                    locale={{\r\n                        emptyText:\r\n                            filteredData.length === 0\r\n                                ? 'No matching keywords'\r\n                                : 'No data',\r\n                    }}\r\n                />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n"],"names":["Categories","fetchCategories","useCategoryActions","navigate","useNavigate","categories","setCategories","useState","filteredData","setFilteredData","getCategories","response","category","useEffect","handleView","id","handleDelete","categoryId","Modal","onSearch","useMemo","debounce","value","lowercasedValue","filtered","_a","Search","Input","renderActions","useCallback","_","record","jsxs","Space","jsx","Button","columns","a","b","name","_id","Link","Fragment","Card","PlusOutlined","ImportOutlined","ReloadOutlined","Table"],"mappings":"uLASA,SAAwBA,GAAa,CAC3B,KAAA,CAAE,gBAAAC,GAAoBC,IACtBC,EAAWC,IACX,CAACC,EAAYC,CAAa,EAAIC,EAAA,SAAqB,CAAE,CAAA,EACrD,CAACC,EAAcC,CAAe,EAAIF,EAAA,SAAqB,CAAE,CAAA,EAEzDG,EAAgB,SAAY,CACxB,MAAAC,EAAW,MAAMV,IACvBK,EACIK,EAAS,IAAKC,IAAwB,CAClC,GAAGA,EACH,IAAKA,EAAS,GAAA,EAChB,CAAA,EAENH,EAAgBE,CAAQ,CAAA,EAG5BE,EAAAA,UAAU,IAAM,CACEH,GAClB,EAAG,CAAE,CAAA,EAEC,MAAAI,EAAcC,GAAe,CACtBZ,EAAA,qBAAqBY,CAAE,EAAE,CAAA,EAGhCC,EAAgBC,GAAuB,CACzCC,EAAAA,MAAM,QAAQ,CACV,MAAO,gBACP,QAAS,8CACT,OAAQ,MACR,WAAY,KACZ,KAAM,IAAM,CACA,QAAA,IAAI,sBAAuBD,CAAU,CACjD,CAAA,CACH,CAAA,EAGCE,EAAWC,EAAA,QACb,IACIC,EAAAA,SAAUC,GAAkB,CAClB,MAAAC,EAAkBD,EAAM,cAC9B,GAAIA,IAAU,GACVb,EAAgBJ,CAAU,MACvB,CACH,MAAMmB,EAAWnB,EAAW,OAAQO,GAChC,OAAA,OAAAa,EAAAb,EAAS,OAAT,YAAAa,EAAe,cAAc,SAASF,GAAe,EAEzDd,EAAgBe,CAAQ,CAC5B,GACD,GAAG,EACV,CAACnB,CAAU,CAAA,EAGT,CAAE,OAAAqB,CAAW,EAAAC,QAEbC,EAAgBC,EAAA,YAClB,CAACC,EAAYC,IACTC,EAAAA,KAACC,SAAM,KAAM,SAAU,KAAI,GACvB,SAAA,CAAAC,EAAA,IAACC,EAAA,OAAA,CACG,MAAM,UACN,QAAQ,WACR,UAAU,uBACV,QAAS,IAAMrB,EAAWiB,EAAO,GAAG,EACvC,SAAA,MAAA,CAED,EACAG,EAAA,IAACC,EAAA,OAAA,CACG,MAAM,SACN,QAAQ,WACR,UAAU,uBACV,QAAS,IAAMnB,EAAae,EAAO,GAAG,EACzC,SAAA,QAAA,CAED,CAAA,EACJ,EAEJ,CAAC,CAAA,EAGCK,EAAiChB,EAAA,QACnC,IAAM,CACF,CACI,MAAO,OACP,UAAW,OACX,IAAK,OACL,OAAQ,CAACiB,EAAGC,KAAOD,EAAE,MAAQ,IAAI,cAAcC,EAAE,MAAQ,EAAE,EAC3D,OAAQ,CAACR,EAAG,CAAE,KAAAS,EAAM,IAAAC,CAAA,IAChBN,EAAAA,IAACO,EAAK,CAAA,GAAI,qBAAqBD,CAAG,GAAK,SAAKD,EAAA,CAEpD,EACA,CACI,MAAO,SACP,IAAK,SACL,OAAQX,CACZ,CACJ,EACA,CAAC,CAAA,EAGL,OAEQI,EAAA,KAAAU,WAAA,CAAA,SAAA,CAACR,EAAAA,IAAAS,EAAAA,KAAA,CAAK,UAAU,mBACZ,SAAAX,EAAAA,KAACC,SAAM,KAAM,SAAU,KAAI,GACvB,SAAA,CAACC,EAAAA,IAAAO,EAAA,CAAK,GAAI,wBACN,SAAAP,EAAA,IAACC,EAAA,OAAA,CACG,KAAK,QACL,UAAU,uBACV,WAAOS,EAAa,EAAA,EACvB,SAAA,KAAA,CAAA,EAGL,EACAV,EAAA,IAACC,EAAA,OAAA,CACG,KAAK,QACL,UAAU,uBACV,WAAOU,EAAe,EAAA,EACzB,SAAA,QAAA,CAED,EACAX,EAAA,IAACC,EAAA,OAAA,CACG,KAAK,QACL,UAAU,uBACV,QAAS,IAAMzB,EAAc,EAC7B,WAAOoC,EAAe,EAAA,EACzB,SAAA,SAAA,CAED,EACAZ,EAAA,IAACR,EAAA,CACG,KAAK,QACL,YAAY,oBACZ,WAAU,GACV,SAAAP,EACA,MAAO,CAAE,MAAO,MAAO,CAAA,CAC3B,CAAA,CAAA,CACJ,CACJ,CAAA,EACAe,EAAA,IAACS,EAAA,KAAA,CACG,UAAU,cACV,MAAO,sBACP,MAAM,UAEN,SAAAT,EAAA,IAACa,EAAA,MAAA,CACG,KAAK,QACL,YAAY,QACZ,aAAc,iBACd,UAAU,iCACV,WAAYvC,EACZ,QAAA4B,EACA,OAAQ,CACJ,UACI5B,EAAa,SAAW,EAClB,uBACA,SACd,CAAA,CACJ,CAAA,CACJ,CACJ,CAAA,CAAA,CAER"}