{"version":3,"file":"ProductDetails-DMkL7B05.js","sources":["../../src/admin/pages/products/ProductDetailsImage.tsx","../../src/admin/pages/products/ProductDetailsActions.tsx","../../src/admin/pages/products/ProductDetailsForm.tsx","../../src/admin/pages/products/ProductDetails.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\n\r\ninterface ProductDetailsImageProps {\r\n    image: string\r\n    onDrop: (files: File[]) => void\r\n    isEditing: boolean\r\n}\r\n\r\nconst ProductDetailsImage: React.FC<ProductDetailsImageProps> = ({\r\n    image,\r\n    onDrop,\r\n    isEditing,\r\n}) => {\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        onDrop,\r\n        accept: { 'image/*': ['.jpeg', '.jpg', '.png'] },\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {isEditing ? (\r\n                <div\r\n                    {...getRootProps()}\r\n                    style={{\r\n                        border: '2px dashed #ccc',\r\n                        padding: '20px',\r\n                        textAlign: 'center',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    <input {...getInputProps()} />\r\n                    <img\r\n                        src={image}\r\n                        alt=\"Image Preview\"\r\n                        style={{ width: 300, height: 300 }}\r\n                        className=\"rounded object-cover\"\r\n                    />\r\n                    <p>Drag or click to change the image</p>\r\n                </div>\r\n            ) : (\r\n                <img\r\n                    src={image}\r\n                    alt=\"image\"\r\n                    style={{\r\n                        width: 300,\r\n                        height: 300,\r\n                        borderRadius: '10%',\r\n                        objectFit: 'cover',\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailsImage\r\n","// ProductDetailsActions.tsx\r\n\r\nimport React from 'react'\r\nimport { Button, Space } from 'antd/lib'\r\nimport {\r\n    DeleteOutlined,\r\n    SaveOutlined,\r\n    BackwardOutlined,\r\n} from '@ant-design/icons'\r\n\r\ninterface ProductActionsProps {\r\n    isEditing: boolean\r\n    onSave: () => void\r\n    onEditToggle: () => void\r\n    onDelete: () => void\r\n}\r\n\r\nconst ProductActions: React.FC<ProductActionsProps> = ({\r\n    isEditing,\r\n    onSave,\r\n    onEditToggle,\r\n    onDelete,\r\n}) => {\r\n    return (\r\n        <Space>\r\n            <Button\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                icon={<SaveOutlined />}\r\n                onClick={isEditing ? onSave : onEditToggle}\r\n            >\r\n                {isEditing ? 'Save' : 'Edit'}\r\n            </Button>\r\n            {isEditing && (\r\n                <Button\r\n                    color=\"default\"\r\n                    size=\"large\"\r\n                    variant=\"outlined\"\r\n                    icon={<BackwardOutlined />}\r\n                    onClick={onEditToggle}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n            )}\r\n            <Button\r\n                color=\"danger\"\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                icon={<DeleteOutlined />}\r\n                onClick={onDelete}\r\n            >\r\n                Delete\r\n            </Button>\r\n        </Space>\r\n    )\r\n}\r\n\r\nexport default ProductActions\r\n","import React from 'react';\r\nimport { Card, Input, Select, Space, Descriptions } from 'antd/lib';\r\nimport { Product } from '../../../interfaces/Product';\r\nimport { UserOutlined, DollarOutlined, BarcodeOutlined } from '@ant-design/icons';\r\n\r\ninterface ProductFormProps {\r\n      product: Product;\r\n      isEditing: boolean;\r\n      editedProduct: Partial<Product>;\r\n      onInputChange: (field: string, value: string) => void;\r\n      errors: { name: string; price: string; sku: string };\r\n      validations: { name: boolean; price: boolean; sku: boolean };\r\n}\r\n\r\nconst ProductForm: React.FC<ProductFormProps> = ({\r\n      product,\r\n      isEditing,\r\n      editedProduct,\r\n      onInputChange,\r\n      errors,\r\n      validations,\r\n}) => {\r\n      return (\r\n            <Space direction=\"vertical\" size=\"large\">\r\n                  <Card title=\"Product Information\">\r\n                        <Descriptions layout=\"vertical\">\r\n                              <Descriptions.Item label=\"Name\">\r\n                                    {isEditing ? (\r\n                                          <Input\r\n                                                prefix={<UserOutlined />}\r\n                                                size=\"large\"\r\n                                                value={editedProduct.name || ''}\r\n                                                onChange={(e) => onInputChange('name', e.target.value)}\r\n                                          />\r\n                                    ) : (\r\n                                          product.name\r\n                                    )}\r\n                              </Descriptions.Item>\r\n                              <Descriptions.Item label=\"Price\">\r\n                                    {isEditing ? (\r\n                                          <Input\r\n                                                prefix={<DollarOutlined />}\r\n                                                size=\"large\"\r\n                                                value={editedProduct.price || ''}\r\n                                                onChange={(e) => onInputChange('price', e.target.value)}\r\n                                          />\r\n                                    ) : (\r\n                                          product.price\r\n                                    )}\r\n                              </Descriptions.Item>\r\n                              <Descriptions.Item label=\"SKU\">\r\n                                    {isEditing ? (\r\n                                          <Input\r\n                                                prefix={<BarcodeOutlined />}\r\n                                                size=\"large\"\r\n                                                value={editedProduct.sku || ''}\r\n                                                onChange={(e) => onInputChange('sku', e.target.value)}\r\n                                          />\r\n                                    ) : (\r\n                                          product.sku\r\n                                    )}\r\n                              </Descriptions.Item>\r\n                        </Descriptions>\r\n                  </Card>\r\n                  <Card title=\"Additional Information\">\r\n                        <Descriptions layout=\"vertical\">\r\n                              <Descriptions.Item label=\"Category\">\r\n                                    {isEditing ? (\r\n                                          <Select\r\n                                                size=\"large\"\r\n                                                defaultValue={editedProduct?.category || product.category}\r\n                                                onChange={(value) => onInputChange('category', value)}\r\n                                          >\r\n                                                {/* Add category options here */}\r\n                                          </Select>\r\n                                    ) : (\r\n                                          product.category\r\n                                    )}\r\n                              </Descriptions.Item>\r\n                              <Descriptions.Item label=\"Stock\">\r\n                                    {isEditing ? (\r\n                                          <Input\r\n                                                size=\"large\"\r\n                                                value={editedProduct.stock || ''}\r\n                                                onChange={(e) => onInputChange('stock', e.target.value)}\r\n                                          />\r\n                                    ) : (\r\n                                          product.stock\r\n                                    )}\r\n                              </Descriptions.Item>\r\n                        </Descriptions>\r\n                  </Card>\r\n            </Space>\r\n      );\r\n};\r\n\r\nexport default ProductForm;","import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Card, message, Spin, Space } from 'antd/lib'\r\nimport useProductActions from '../../../hooks/product/useProductActions'\r\nimport { Product } from '../../../interfaces/Product'\r\nimport ProductAvatar from './ProductDetailsImage'\r\nimport ProductActions from './ProductDetailsActions'\r\nimport ProductForm from './ProductDetailsForm'\r\nimport * as formatUtils from '../../utils/format.utils'\r\n\r\nconst ProductDetail: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>()\r\n    const { fetchProductById, updateProduct, deleteProduct } =\r\n        useProductActions()\r\n    const [product, setProduct] = useState<Product | null>(null)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [editedProduct, setEditedProduct] = useState<Partial<Product> | null>(\r\n        null\r\n    )\r\n    const [avatarPreview, setAvatarPreview] = useState<string | null>(null)\r\n    const [errors, setErrors] = useState({ name: '', price: '', sku: '' })\r\n    const [validations, setValidations] = useState({\r\n        name: true,\r\n        price: true,\r\n        sku: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const getProduct = async () => {\r\n            const fetchedProduct = await fetchProductById(id)\r\n            setProduct(fetchedProduct)\r\n            setEditedProduct(fetchedProduct)\r\n            setAvatarPreview(`http://localhost:8888/${fetchedProduct.avatar}`)\r\n        }\r\n        getProduct()\r\n    }, [id])\r\n\r\n    const onDrop = (acceptedFiles: File[]) => {\r\n        const file = acceptedFiles[0]\r\n        const previewUrl = URL.createObjectURL(file)\r\n        setAvatarPreview(previewUrl)\r\n    }\r\n\r\n    const validateFields = () => {\r\n        const newValidations = {\r\n            name: editedProduct?.name ? true : false,\r\n            price: formatUtils.isValidPrice(String(editedProduct?.price || '')),\r\n            sku: editedProduct?.sku ? true : false,\r\n        }\r\n        setValidations(newValidations)\r\n        return Object.values(newValidations).every((value) => value === true)\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        const newErrors = { name: '', price: '', sku: '' }\r\n\r\n        if (!editedProduct?.name) {\r\n            message.warning('Name is required')\r\n            newErrors.name = 'Name is required'\r\n        }\r\n\r\n        if (!formatUtils.isValidPrice(String(editedProduct?.price || ''))) {\r\n            message.warning('Check your price format')\r\n            newErrors.price = 'Invalid price format'\r\n        }\r\n\r\n        if (newErrors.name || newErrors.price || newErrors.sku) {\r\n            setErrors(newErrors)\r\n            return\r\n        }\r\n\r\n        try {\r\n            if (!validateFields()) {\r\n                message.warning('Please check your input fields')\r\n                return\r\n            }\r\n\r\n            const formData = new FormData()\r\n            for (const key in editedProduct) {\r\n                formData.append(key, editedProduct[key])\r\n            }\r\n\r\n            if (avatarPreview) {\r\n                const fileInput = document.querySelector('input[type=\"file\"]')\r\n                if ((fileInput as HTMLInputElement)?.files[0]) {\r\n                    formData.append(\r\n                        'avatar',\r\n                        (fileInput as HTMLInputElement).files[0]\r\n                    )\r\n                }\r\n            }\r\n\r\n            const loadingMessage = message.loading('Saving...', 0)\r\n\r\n            setTimeout(async () => {\r\n                try {\r\n                    const updatedProduct = await updateProduct(id, formData)\r\n                    setProduct(updatedProduct)\r\n                    setIsEditing(false)\r\n                    loadingMessage()\r\n                    message.success('Product updated successfully')\r\n                } catch (error) {\r\n                    console.error('Error during save:', error)\r\n                    loadingMessage()\r\n                    message.error('Error occurred while saving')\r\n                }\r\n            }, 1000)\r\n        } catch (error) {\r\n            console.error('Error during save:', error)\r\n        }\r\n    }\r\n\r\n    const handleEditToggle = () => {\r\n        setIsEditing(!isEditing)\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await deleteProduct(id)\r\n            message.success('Product deleted successfully')\r\n            console.log('Product deleted successfully')\r\n            window.location.href = '/admin/products'\r\n        } catch (error) {\r\n            console.error('Error during delete:', error)\r\n        }\r\n    }\r\n\r\n    if (!product) {\r\n        return <Spin size=\"large\" fullscreen />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Space\r\n                className=\"flex items-center justify-center\"\r\n                direction=\"vertical\"\r\n                size=\"large\"\r\n            >\r\n                <ProductActions\r\n                    isEditing={isEditing}\r\n                    onSave={handleSave}\r\n                    onEditToggle={handleEditToggle}\r\n                    onDelete={handleDelete}\r\n                />\r\n\r\n                <ProductAvatar\r\n                    image={\r\n                        avatarPreview ||\r\n                        `http://localhost:8888/${product.image}`\r\n                    }\r\n                    onDrop={onDrop}\r\n                    isEditing={isEditing}\r\n                />\r\n                <ProductForm\r\n                    product={product}\r\n                    isEditing={isEditing}\r\n                    editedProduct={editedProduct || {}}\r\n                    onInputChange={(field, value) =>\r\n                        setEditedProduct((prev) => ({\r\n                            ...prev,\r\n                            [field]: value,\r\n                        }))\r\n                    }\r\n                    errors={errors}\r\n                    validations={validations}\r\n                />\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductDetail\r\n"],"names":["ProductDetailsImage","image","onDrop","isEditing","getRootProps","getInputProps","useDropzone","jsxs","jsx","ProductActions","onSave","onEditToggle","onDelete","Space","Button","SaveOutlined","BackwardOutlined","DeleteOutlined","ProductForm","product","editedProduct","onInputChange","errors","validations","Card","Descriptions","Input","UserOutlined","e","DollarOutlined","BarcodeOutlined","Select","value","ProductDetail","id","useParams","fetchProductById","updateProduct","deleteProduct","useProductActions","setProduct","useState","setIsEditing","setEditedProduct","avatarPreview","setAvatarPreview","setErrors","setValidations","useEffect","fetchedProduct","acceptedFiles","file","previewUrl","validateFields","newValidations","formatUtils.isValidPrice","handleSave","newErrors","message","formData","key","fileInput","loadingMessage","updatedProduct","error","handleEditToggle","handleDelete","ProductAvatar","field","prev","Spin"],"mappings":"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"}