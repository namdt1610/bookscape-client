{"version":3,"file":"Register-M1MZvd4S.js","sources":["../../src/admin/pages/auth/Register/RegisterForm.tsx","../../src/admin/pages/auth/Register/RegisterBanner.tsx","../../src/admin/pages/auth/Register/RegisterLayout.tsx","../../src/admin/pages/auth/Register/Register.tsx"],"sourcesContent":["import React from 'react'\r\nimport type { FormProps } from 'antd/lib'\r\nimport { Button, Form, Input, message } from 'antd/lib'\r\nimport useAuthApi from '../../../../hooks/Auth/useAuthApiBeta'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useApiContext } from '../../../../contexts/ApiContext'\r\n\r\ntype FieldType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n    fullName: string\r\n}\r\n\r\ntype RegisterFormProps = {\r\n    from: string\r\n}\r\n\r\nconst RegisterForm: React.FC<RegisterFormProps> = ({ from }) => {\r\n    const navigate = useNavigate()\r\n    const { register } = useAuthApi()\r\n    const { state } = useApiContext()\r\n\r\n    const onFinish: FormProps<FieldType>['onFinish'] = (values) => {\r\n        onRegister(values)\r\n    }\r\n\r\n    const onFinishFailed: FormProps<FieldType>['onFinishFailed'] = (\r\n        errorInfo\r\n    ) => {\r\n        message.error('Failed to register')\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n\r\n    const onRegister = async (values: FieldType) => {\r\n        try {\r\n            if (values.password !== values.confirmPassword) {\r\n                message.error('Passwords do not match')\r\n                return\r\n            }\r\n\r\n            await register({\r\n                email: values.email,\r\n                password: values.password,\r\n                fullName: values.fullName,\r\n            })\r\n            message.success('Registration successful')\r\n            navigate(from || '/admin/login')\r\n        } catch (error: any) {\r\n            message.error(error?.message || 'Failed to register')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            name=\"register\"\r\n            style={{\r\n                width: 500,\r\n                paddingRight: '50px',\r\n            }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"on\"\r\n            layout=\"vertical\"\r\n        >\r\n            <Form.Item<FieldType>\r\n                label=\"Full Name\"\r\n                name=\"fullName\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your full name!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item<FieldType>\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        type: 'email',\r\n                        message: 'Please input a valid email!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item<FieldType>\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please input your password!',\r\n                    },\r\n                    {\r\n                        min: 6,\r\n                        message: 'Password must be at least 6 characters!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item<FieldType>\r\n                label=\"Confirm Password\"\r\n                name=\"confirmPassword\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Please confirm your password!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve()\r\n                            }\r\n                            return Promise.reject(\r\n                                new Error('Passwords do not match!')\r\n                            )\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={state.loading}\r\n                    disabled={state.loading}\r\n                >\r\n                    Register\r\n                </Button>\r\n                <span> or </span>\r\n                <Button\r\n                    onClick={() => navigate('/admin/login')}\r\n                    type=\"primary\"\r\n                    loading={state.loading}\r\n                    disabled={state.loading}\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\n\r\nconst RegisterBanner = () => {\r\n    const src = '/videos/auth_banner.mp4'\r\n    return (\r\n        <>\r\n            <video width={700} height={700} autoPlay={true} loop muted>\r\n                <source src={src} />\r\n            </video>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterBanner\r\n","import React from 'react'\r\n\r\ninterface RegisterLayoutProps {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst RegisterLayout: React.FC<RegisterLayoutProps> = ({ children }) => {\r\n    return (\r\n        <div className=\"relative w-full h-screen\">\r\n            {/* Video background */}\r\n            <video\r\n                className=\"absolute top-0 left-0 w-full h-full object-cover\"\r\n                autoPlay\r\n                loop\r\n                muted\r\n            >\r\n                <source src=\"/videos/bg_loop_abstract.mp4\" type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n            </video>\r\n\r\n            {/* Gradient overlay */}\r\n            {/* <div className=\"absolute top-0 left-0 w-full h-full bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 opacity-50\" /> */}\r\n\r\n            {/* Centered Content */}\r\n            <div className=\"flex items-center justify-center w-full h-full relative z-10\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterLayout\r\n","import React from 'react'\r\nimport RegisterForm from './RegisterForm'\r\nimport RegisterBanner from './RegisterBanner'\r\nimport RegisterLayout from './RegisterLayout'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Card } from 'antd/lib'\r\n\r\nconst Register: React.FC = () => {\r\n    const location = useLocation()\r\n    const from = location.state?.from?.pathname || '/admin'\r\n\r\n    return (\r\n        <RegisterLayout>\r\n            <Card className=\"w-full max-w-6xl card-border\">\r\n                <div className=\"flex flex-col md:flex-row items-center justify-center w-full\">\r\n                    <div className=\"w-full md:w-1/2 mb-8 md:mb-0\">\r\n                        <RegisterBanner />\r\n                    </div>\r\n                    <div className=\"w-full md:w-1/2 flex justify-center items-center\">\r\n                        <div className=\"w-full max-w-[450px] px-4\">\r\n                            <RegisterForm from={from} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </RegisterLayout>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"],"names":["RegisterForm","from","navigate","useNavigate","register","useAuthApi","state","useApiContext","onFinish","values","onRegister","onFinishFailed","errorInfo","message","error","jsxs","Form","jsx","Input","getFieldValue","_","value","Button","RegisterBanner","RegisterLayout","children","Register","_b","_a","useLocation","Card"],"mappings":"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"}