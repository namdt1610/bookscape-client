{"version":3,"file":"useCategoryActions-CgfjJzUJ.js","sources":["../../src/api/categoryApi.ts","../../src/hooks/Auth/useCategoryContext.ts","../../src/hooks/Auth/useCategoryActions.ts"],"sourcesContent":["import axiosInstance from './axiosInstance'\r\nimport { categoryApi } from './apiConfig'\r\nimport { Category } from 'interfaces/Category'\r\n\r\nexport const fetchCategoriesApi = async (): Promise<Category[]> => {\r\n    try {\r\n        const response = await axiosInstance.get(categoryApi.base)\r\n        return response.data\r\n    } catch (error: any) {\r\n        console.error(\r\n            'Error fetching categories:',\r\n            error.response?.data?.message || error.message\r\n        )\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const fetchCategoryByIdApi = async (id: string): Promise<Category> => {\r\n    if (!id) throw new Error('Invalid ID')\r\n    try {\r\n        const response = await axiosInstance.get(categoryApi.getById(id))\r\n        return response.data\r\n    } catch (error: any) {\r\n        console.error(\r\n            `Error fetching category with ID ${id}:`,\r\n            error.response?.data?.message || error.message\r\n        )\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const createCategoryApi = async (\r\n    categoryData: Category\r\n): Promise<Category> => {\r\n    try {\r\n        const response = await axiosInstance.post(\r\n            categoryApi.base,\r\n            categoryData\r\n        )\r\n        return response.data\r\n    } catch (error: any) {\r\n        console.error(\r\n            'Error creating category:',\r\n            error.response?.data?.message || error.message\r\n        )\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const updateCategoryApi = async (\r\n    id: string,\r\n    updatedData: Partial<Category>\r\n): Promise<Category> => {\r\n    if (!id) throw new Error('Invalid ID')\r\n    try {\r\n        const response = await axiosInstance.put(\r\n            categoryApi.getById(id),\r\n            updatedData\r\n        )\r\n        return response.data\r\n    } catch (error: any) {\r\n        console.error(\r\n            `Error updating category with ID ${id}:`,\r\n            error.response?.data?.message || error.message\r\n        )\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const deleteCategoryApi = async (id: string): Promise<void> => {\r\n    if (!id) throw new Error('Invalid ID')\r\n    try {\r\n        await axiosInstance.delete(categoryApi.getById(id))\r\n    } catch (error: any) {\r\n        console.error(\r\n            `Error deleting category with ID ${id}:`,\r\n            error.response?.data?.message || error.message\r\n        )\r\n        throw error\r\n    }\r\n}\r\n","import { CategoryContext } from '../../contexts/CategoryContext'\r\nimport { useContext } from 'react'\r\n\r\nexport const useCategoryContext = () => {\r\n    const context = useContext(CategoryContext)\r\n\r\n    if (!context) {\r\n        throw new Error(\r\n            'useCategoriesContext must be used inside an CategoriesContextProvider'\r\n        )\r\n    }\r\n\r\n    return context\r\n}\r\n","import {\r\n    fetchCategoriesApi,\r\n    fetchCategoryByIdApi,\r\n    createCategoryApi,\r\n    updateCategoryApi,\r\n    deleteCategoryApi,\r\n} from '../../api/categoryApi'\r\nimport useApiCall from '../useApiCall'\r\nimport { useCategoryContext } from './useCategoryContext'\r\nimport { message } from 'antd'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// hooks/Auth/useCategoryActions.ts\r\n\r\nconst useCategoryActions = () => {\r\n    const { dispatch } = useCategoryContext()\r\n    const navigate = useNavigate()\r\n\r\n    const fetchCategories = useApiCall(\r\n        fetchCategoriesApi,\r\n        (data) => {\r\n            dispatch({ type: 'SET_CATEGORIES', payload: data.categories })\r\n        },\r\n        (error) => {\r\n            message.error(\r\n                error?.response?.data?.message || 'Failed to fetch categories'\r\n            )\r\n        }\r\n    )\r\n\r\n    const fetchCategoryById = useApiCall(\r\n        fetchCategoryByIdApi,\r\n        (data) => {\r\n            dispatch({ type: 'GET_CATEGORY', payload: data.category })\r\n        },\r\n        (error) => {\r\n            message.error(\r\n                error?.response?.data?.message || 'Failed to fetch category'\r\n            )\r\n        }\r\n    )\r\n\r\n    const createCategory = useApiCall(\r\n        createCategoryApi,\r\n        (data) => {\r\n            message.loading('Creating category...', 0)\r\n            dispatch({ type: 'CREATE_CATEGORY', payload: data.category })\r\n            setTimeout(() => {\r\n                message.destroy()\r\n                message.success('Category created successfully', 1)\r\n            }, 1000)\r\n        },\r\n        (error) => {\r\n            message.error(\r\n                error?.response?.data?.message || 'Category creation failed'\r\n            )\r\n        }\r\n    )\r\n\r\n    const updateCategory = useApiCall(\r\n        updateCategoryApi,\r\n        (data) => {\r\n            message.loading('Updating category...', 0)\r\n            dispatch({ type: 'UPDATE_CATEGORY', payload: data.category })\r\n            setTimeout(() => {\r\n                message.destroy()\r\n                message.success('Category updated successfully', 1)\r\n            }, 1000)\r\n        },\r\n        (error) => {\r\n            message.error(\r\n                error?.response?.data?.message || 'Category update failed'\r\n            )\r\n        }\r\n    )\r\n\r\n    const deleteCategory = useApiCall(\r\n        deleteCategoryApi,\r\n        (data) => {\r\n            message.loading('Deleting category...', 0)\r\n            dispatch({ type: 'DELETE_CATEGORY', payload: data.categoryId })\r\n            setTimeout(() => {\r\n                message.destroy()\r\n                message.success('Category deleted successfully', 1)\r\n            }, 1000)\r\n        },\r\n        (error) => {\r\n            message.error(\r\n                error?.response?.data?.message || 'Category deletion failed'\r\n            )\r\n        }\r\n    )\r\n\r\n    return {\r\n        fetchCategories,\r\n        fetchCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n    }\r\n}\r\n\r\nexport default useCategoryActions\r\n"],"names":["fetchCategoriesApi","axiosInstance","categoryApi","error","_b","_a","fetchCategoryByIdApi","id","createCategoryApi","categoryData","updateCategoryApi","updatedData","deleteCategoryApi","useCategoryContext","context","useContext","CategoryContext","useCategoryActions","dispatch","useNavigate","fetchCategories","useApiCall","data","message","fetchCategoryById","createCategory","updateCategory","deleteCategory"],"mappings":"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"}