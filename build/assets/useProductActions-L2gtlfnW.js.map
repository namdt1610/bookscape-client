{"version":3,"file":"useProductActions-L2gtlfnW.js","sources":["../../src/api/productApi.ts","../../src/hooks/product/useProductActions.ts"],"sourcesContent":["import axiosInstance from './axiosInstance'\r\nimport { productApi } from './apiConfig'\r\n\r\nexport const fetchProductsApi = async () => {\r\n    try {\r\n        const response = await axiosInstance.get(productApi.base)\r\n        return response.data\r\n    } catch (error) {\r\n        console.error('Lỗi khi lấy sản phẩm:', error)\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const fetchProductByIdApi = async (id) => {\r\n    if (!id) throw new Error('ID không hợp lệ')\r\n    try {\r\n        const response = await axiosInstance.get(productApi.getById(id))\r\n        return response.data\r\n    } catch (error) {\r\n        console.error(`Lỗi khi lấy sản phẩm với ID ${id}:`, error)\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const createProductApi = async (productData) => {\r\n    try {\r\n        const response = await axiosInstance.post(productApi.base, productData)\r\n        return response.data\r\n    } catch (error) {\r\n        console.error('Lỗi khi tạo sản phẩm mới:', error)\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const updateProductApi = async (id, updatedData) => {\r\n    if (!id) throw new Error('ID không hợp lệ')\r\n    try {\r\n        const response = await axiosInstance.put(\r\n            productApi.getById(id),\r\n            updatedData\r\n        )\r\n        return response.data\r\n    } catch (error) {\r\n        console.error(`Lỗi khi cập nhật sản phẩm với ID ${id}:`, error)\r\n        throw error\r\n    }\r\n}\r\n\r\nexport const deleteProductApi = async (id) => {\r\n    if (!id) throw new Error('ID không hợp lệ')\r\n    try {\r\n        const response = await axiosInstance.delete(productApi.getById(id))\r\n        return response.data\r\n    } catch (error) {\r\n        console.error(`Lỗi khi xóa sản phẩm với ID ${id}:`, error)\r\n        throw error\r\n    }\r\n}\r\n","import { useContext } from 'react'\r\nimport { ProductContext } from '../../contexts/ProductContext'\r\nimport {\r\n    fetchProductsApi,\r\n    fetchProductByIdApi,\r\n    deleteProductApi,\r\n    createProductApi,\r\n    updateProductApi,\r\n} from '../../api/productApi'\r\n\r\nconst useProductActions = () => {\r\n    const { dispatch } = useContext(ProductContext)\r\n\r\n    type ActionType =\r\n        | 'SET_PRODUCTS'\r\n        | 'CREATE_PRODUCT'\r\n        | 'GET_PRODUCT'\r\n        | 'UPDATE_PRODUCT'\r\n        | 'DELETE_PRODUCT'\r\n\r\n    const apiRequest = async (\r\n        apiFunc: Function,\r\n        actionType: ActionType,\r\n        payload?: any\r\n    ) => {\r\n        try {\r\n            const data = await apiFunc(payload)\r\n            dispatch({ type: actionType, payload: data })\r\n            return data\r\n        } catch (error) {\r\n            console.error(`Error during ${actionType}:`, error)\r\n            throw error // Optional: throw error if you want to handle it in the calling component\r\n        }\r\n    }\r\n\r\n    const fetchProducts = async () =>\r\n        apiRequest(fetchProductsApi, 'SET_PRODUCTS')\r\n\r\n    const fetchProductById = async (id: string) =>\r\n        apiRequest(() => fetchProductByIdApi(id), 'GET_PRODUCT')\r\n\r\n    const deleteProduct = async (id: string) =>\r\n        apiRequest(() => deleteProductApi(id), 'DELETE_PRODUCT')\r\n\r\n    const createProduct = async (productData: object) =>\r\n        apiRequest(() => createProductApi(productData), 'CREATE_PRODUCT')\r\n\r\n    const updateProduct = async (id: string, updatedData: FormData) =>\r\n        apiRequest(() => updateProductApi(id, updatedData), 'UPDATE_PRODUCT')\r\n\r\n    return {\r\n        fetchProducts,\r\n        fetchProductById,\r\n        deleteProduct,\r\n        createProduct,\r\n        updateProduct,\r\n    }\r\n}\r\n\r\nexport default useProductActions\r\n"],"names":["fetchProductsApi","axiosInstance","productApi","error","fetchProductByIdApi","id","createProductApi","productData","updateProductApi","updatedData","deleteProductApi","useProductActions","dispatch","useContext","ProductContext","apiRequest","apiFunc","actionType","payload","data"],"mappings":"+DAGO,MAAMA,EAAmB,SAAY,CACpC,GAAA,CAEA,OADiB,MAAMC,EAAc,IAAIC,EAAW,IAAI,GACxC,WACXC,EAAO,CACJ,cAAA,MAAM,wBAAyBA,CAAK,EACtCA,CACV,CACJ,EAEaC,EAAsB,MAAOC,GAAO,CAC7C,GAAI,CAACA,EAAU,MAAA,IAAI,MAAM,iBAAiB,EACtC,GAAA,CAEA,OADiB,MAAMJ,EAAc,IAAIC,EAAW,QAAQG,CAAE,CAAC,GAC/C,WACXF,EAAO,CACZ,cAAQ,MAAM,+BAA+BE,CAAE,IAAKF,CAAK,EACnDA,CACV,CACJ,EAEaG,EAAmB,MAAOC,GAAgB,CAC/C,GAAA,CAEA,OADiB,MAAMN,EAAc,KAAKC,EAAW,KAAMK,CAAW,GACtD,WACXJ,EAAO,CACJ,cAAA,MAAM,4BAA6BA,CAAK,EAC1CA,CACV,CACJ,EAEaK,EAAmB,MAAOH,EAAII,IAAgB,CACvD,GAAI,CAACJ,EAAU,MAAA,IAAI,MAAM,iBAAiB,EACtC,GAAA,CAKA,OAJiB,MAAMJ,EAAc,IACjCC,EAAW,QAAQG,CAAE,EACrBI,CAAA,GAEY,WACXN,EAAO,CACZ,cAAQ,MAAM,oCAAoCE,CAAE,IAAKF,CAAK,EACxDA,CACV,CACJ,EAEaO,EAAmB,MAAOL,GAAO,CAC1C,GAAI,CAACA,EAAU,MAAA,IAAI,MAAM,iBAAiB,EACtC,GAAA,CAEA,OADiB,MAAMJ,EAAc,OAAOC,EAAW,QAAQG,CAAE,CAAC,GAClD,WACXF,EAAO,CACZ,cAAQ,MAAM,+BAA+BE,CAAE,IAAKF,CAAK,EACnDA,CACV,CACJ,EC/CMQ,EAAoB,IAAM,CAC5B,KAAM,CAAE,SAAAC,CAAA,EAAaC,EAAA,WAAWC,CAAc,EASxCC,EAAa,MACfC,EACAC,EACAC,IACC,CACG,GAAA,CACM,MAAAC,EAAO,MAAMH,EAAQE,CAAO,EAClC,OAAAN,EAAS,CAAE,KAAMK,EAAY,QAASE,CAAM,CAAA,EACrCA,QACFhB,EAAO,CACZ,cAAQ,MAAM,gBAAgBc,CAAU,IAAKd,CAAK,EAC5CA,CACV,CAAA,EAkBG,MAAA,CACH,cAhBkB,SAClBY,EAAWf,EAAkB,cAAc,EAgB3C,iBAdqB,MAAOK,GAC5BU,EAAW,IAAMX,EAAoBC,CAAE,EAAG,aAAa,EAcvD,cAZkB,MAAOA,GACzBU,EAAW,IAAML,EAAiBL,CAAE,EAAG,gBAAgB,EAYvD,cAVkB,MAAOE,GACzBQ,EAAW,IAAMT,EAAiBC,CAAW,EAAG,gBAAgB,EAUhE,cARkB,MAAOF,EAAYI,IACrCM,EAAW,IAAMP,EAAiBH,EAAII,CAAW,EAAG,gBAAgB,CAOpE,CAER"}